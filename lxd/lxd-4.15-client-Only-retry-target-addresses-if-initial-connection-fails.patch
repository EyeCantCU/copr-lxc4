From 46fe2f1685113a81c0027b67b9081c90dd3400eb Mon Sep 17 00:00:00 2001
From: Thomas Parrott <thomas.parrott@canonical.com>
Date: Fri, 18 Jun 2021 11:07:50 +0100
Subject: [PATCH] client: Only retry target addresses if initial connection
 fails

Don't try next address if the initial operation creation succeeds, but then the actual operation fails.

This suggests that the error is internal to the server and retrying the same operation just on a different address for the same target can potentially exacerbate the problem.

In one example #8900 the instance copy to a remote target node failed on the target due to insufficent pool size.
This error was successfully being returned to the client, but it subsequently retried, but the original operation was not cleaned up, causing a hang.

There was no reason to retry as this could not have succeeded on a different address.

Fixes #8900

Signed-off-by: Thomas Parrott <thomas.parrott@canonical.com>
---
 client/lxd_containers.go      | 18 +++++++++++++++---
 client/lxd_images.go          |  6 +++++-
 client/lxd_instances.go       | 18 +++++++++++++++---
 client/lxd_storage_volumes.go | 12 ++++++++++--
 4 files changed, 45 insertions(+), 9 deletions(-)

diff --git a/client/lxd_containers.go b/client/lxd_containers.go
index 1fab211b44..fe5ace0b54 100644
--- a/client/lxd_containers.go
+++ b/client/lxd_containers.go
@@ -200,7 +200,11 @@ func (r *ProtocolLXD) tryCreateContainer(req api.ContainersPost, urls []string)
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
@@ -554,7 +558,11 @@ func (r *ProtocolLXD) tryMigrateContainer(source InstanceServer, name string, re
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
@@ -1220,7 +1228,11 @@ func (r *ProtocolLXD) tryMigrateContainerSnapshot(source InstanceServer, contain
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
diff --git a/client/lxd_images.go b/client/lxd_images.go
index f2c57641c3..bd14663781 100644
--- a/client/lxd_images.go
+++ b/client/lxd_images.go
@@ -600,7 +600,11 @@ func (r *ProtocolLXD) tryCopyImage(req api.ImagesPost, urls []string) (RemoteOpe
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
diff --git a/client/lxd_instances.go b/client/lxd_instances.go
index ac42ef8489..3aae6c279e 100644
--- a/client/lxd_instances.go
+++ b/client/lxd_instances.go
@@ -290,7 +290,11 @@ func (r *ProtocolLXD) tryCreateInstance(req api.InstancesPost, urls []string, op
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
@@ -660,7 +664,11 @@ func (r *ProtocolLXD) tryMigrateInstance(source InstanceServer, name string, req
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
@@ -1434,7 +1442,11 @@ func (r *ProtocolLXD) tryMigrateInstanceSnapshot(source InstanceServer, instance
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
diff --git a/client/lxd_storage_volumes.go b/client/lxd_storage_volumes.go
index 53ce9d3d5c..07ee3ef9c4 100644
--- a/client/lxd_storage_volumes.go
+++ b/client/lxd_storage_volumes.go
@@ -306,7 +306,11 @@ func (r *ProtocolLXD) tryMigrateStoragePoolVolume(source InstanceServer, pool st
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
@@ -361,7 +365,11 @@ func (r *ProtocolLXD) tryCreateStoragePoolVolume(pool string, req api.StorageVol
 			err = rop.targetOp.Wait()
 			if err != nil {
 				errors[serverURL] = err
-				continue
+
+				// If we were able to connect and then operation failed, don't attempt another
+				// endpoint address as it was not a connection error, and we may end up
+				// exacerbating the problem by trying again via another address.
+				break
 			}
 
 			success = true
