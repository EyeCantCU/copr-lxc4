From 016ebc45733a521eb629dea3fcb10d8f8af18f17 Mon Sep 17 00:00:00 2001
From: Max Asnaashari <max.asnaashari@canonical.com>
Date: Fri, 4 Feb 2022 22:53:38 +0000
Subject: [PATCH] lxd/db/generate/db/stmt: Add 'order' tag

Signed-off-by: Max Asnaashari <max.asnaashari@canonical.com>
---
 lxd/db/generate/db/stmt.go | 36 +++++++++++++++++++++++++++---------
 1 file changed, 27 insertions(+), 9 deletions(-)

diff --git a/lxd/db/generate/db/stmt.go b/lxd/db/generate/db/stmt.go
index 1e02b403715..20aedaa3c15 100644
--- a/lxd/db/generate/db/stmt.go
+++ b/lxd/db/generate/db/stmt.go
@@ -130,15 +130,33 @@ func (s *Stmt) objects(buf *file.Buffer) error {
 			}
 		}
 	}
-	nk := mapping.NaturalKey()
-	orderBy := make([]string, len(nk))
-	for i, field := range nk {
-		if field.IsScalar() {
-			orderBy[i] = lex.Plural(lex.Snake(field.Name)) + ".id"
-		} else {
-			orderBy[i] = mapping.FieldColumnName(field.Name, table)
-			if mapping.Type == ReferenceTable || mapping.Type == MapTable {
-				orderBy[i] = strings.Replace(orderBy[i], "reference", "%s", -1)
+	orderBy := []string{}
+	for _, field := range fields {
+		if field.Config.Get("order") != "" {
+			if field.IsScalar() {
+				orderBy = append(orderBy, lex.Plural(lex.Snake(field.Name))+".id")
+			} else {
+				line := mapping.FieldColumnName(field.Name, table)
+				if mapping.Type == ReferenceTable || mapping.Type == MapTable {
+					line = strings.Replace(line, "reference", "%s", -1)
+				}
+
+				orderBy = append(orderBy, line)
+			}
+		}
+	}
+
+	if len(orderBy) < 1 {
+		nk := mapping.NaturalKey()
+		orderBy = make([]string, len(nk))
+		for i, field := range nk {
+			if field.IsScalar() {
+				orderBy[i] = lex.Plural(lex.Snake(field.Name)) + ".id"
+			} else {
+				orderBy[i] = mapping.FieldColumnName(field.Name, table)
+				if mapping.Type == ReferenceTable || mapping.Type == MapTable {
+					orderBy[i] = strings.Replace(orderBy[i], "reference", "%s", -1)
+				}
 			}
 		}
 	}
From 297487d6201308f83bb71704399c1d2f9e3561eb Mon Sep 17 00:00:00 2001
From: Max Asnaashari <max.asnaashari@canonical.com>
Date: Fri, 4 Feb 2022 22:54:36 +0000
Subject: [PATCH] lxd/db/instance/profiles: Use 'order' tag to order queries by
 apply order

Signed-off-by: Max Asnaashari <max.asnaashari@canonical.com>
---
 lxd/db/instance_profiles.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/lxd/db/instance_profiles.go b/lxd/db/instance_profiles.go
index dba4dd726be..2ba2bedc1f1 100644
--- a/lxd/db/instance_profiles.go
+++ b/lxd/db/instance_profiles.go
@@ -22,9 +22,9 @@ import "fmt"
 // InstanceProfile is an association table struct that associates Instances
 // to Profiles.
 type InstanceProfile struct {
-	InstanceID int `db:"primary=yes"`
+	InstanceID int `db:"primary=yes&order=yes"`
 	ProfileID  int
-	ApplyOrder int
+	ApplyOrder int `db:"order=yes"`
 }
 
 // InstanceProfileFilter specifies potential query parameter fields.
From 3ed1b9c4c4e606afe714e541abf5860cdbb7e03e Mon Sep 17 00:00:00 2001
From: Max Asnaashari <max.asnaashari@canonical.com>
Date: Fri, 4 Feb 2022 22:54:46 +0000
Subject: [PATCH] lxd/db/instance/profiles.mapper: Update generated code

Signed-off-by: Max Asnaashari <max.asnaashari@canonical.com>
---
 lxd/db/instance_profiles.mapper.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lxd/db/instance_profiles.mapper.go b/lxd/db/instance_profiles.mapper.go
index a85b4f4ca33..262968ec85b 100644
--- a/lxd/db/instance_profiles.mapper.go
+++ b/lxd/db/instance_profiles.mapper.go
@@ -18,7 +18,7 @@ var _ = api.ServerEnvironment{}
 var instanceProfileObjects = cluster.RegisterStmt(`
 SELECT instances_profiles.instance_id, instances_profiles.profile_id, instances_profiles.apply_order
   FROM instances_profiles
-  ORDER BY instances_profiles.instance_id
+  ORDER BY instances_profiles.instance_id, instances_profiles.apply_order
 `)
 
 var instanceProfileCreate = cluster.RegisterStmt(`
