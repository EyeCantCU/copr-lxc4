From 29c99ef50c3b4948938901db40677cd95ef21e74 Mon Sep 17 00:00:00 2001
From: Thomas Parrott <thomas.parrott@canonical.com>
Date: Wed, 31 May 2023 23:03:36 +0100
Subject: [PATCH] lxd/instance/drivers/driver/qemu: Set shutdown and panic
 actions in start

If the guest panics then shut the VM down. Don't leave it paused.

Signed-off-by: Thomas Parrott <thomas.parrott@canonical.com>
---
 lxd/instance/drivers/driver_qemu.go | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/lxd/instance/drivers/driver_qemu.go b/lxd/instance/drivers/driver_qemu.go
index e445eb005073..7ff2c91c8795 100644
--- a/lxd/instance/drivers/driver_qemu.go
+++ b/lxd/instance/drivers/driver_qemu.go
@@ -1646,7 +1646,19 @@ func (d *qemu) start(stateful bool, op *operationlock.InstanceOperation) error {
 	// This ensures that if the guest initiates a reboot that the SHUTDOWN event is generated instead with the
 	// reason set to "guest-reset" so that the event handler returned from getMonitorEventHandler() can restart
 	// the guest instead.
-	err = monitor.SetAction(map[string]string{"reboot": "shutdown"})
+	actions := map[string]string{
+		"shutdown": "poweroff",
+		"reboot":   "shutdown", // Don't reset on reboot. Let LXD handle reboots.
+		"panic":    "shutdown", // Don't pause of panic. Let LXD cleanup.
+	}
+
+	qemuVer71, _ := version.NewDottedVersion("7.1")
+	qemuVer, _ := d.version()
+	if qemuVer != nil && qemuVer.Compare(qemuVer71) >= 0 {
+		actions["panic"] = "exit-failure" // Shutdown VM and exit with nonzero status. Let LXD cleanup.
+	}
+
+	err = monitor.SetAction(actions)
 	if err != nil {
 		op.Done(err)
 		return fmt.Errorf("Failed setting reboot action: %w", err)
From 8a4ee0caf1f77f99aa6de9e8e60740207ab8c507 Mon Sep 17 00:00:00 2001
From: Thomas Parrott <thomas.parrott@canonical.com>
Date: Wed, 31 May 2023 23:04:14 +0100
Subject: [PATCH] lxd/instance/drivers/driver/qemu: Handle more QMP statuses in
 statusCode

And default to returning api.Error for unknown statuses.

Signed-off-by: Thomas Parrott <thomas.parrott@canonical.com>
---
 lxd/instance/drivers/driver_qemu.go | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/lxd/instance/drivers/driver_qemu.go b/lxd/instance/drivers/driver_qemu.go
index 7ff2c91c8795..c12e5b699fcb 100644
--- a/lxd/instance/drivers/driver_qemu.go
+++ b/lxd/instance/drivers/driver_qemu.go
@@ -7383,19 +7383,18 @@ func (d *qemu) statusCode() api.StatusCode {
 		return api.Error
 	}
 
-	if status == "running" {
-		if shared.IsTrue(d.LocalConfig()["volatile.last_state.ready"]) {
+	switch status {
+	case "prelaunch", "running":
+		if status == "running" && shared.IsTrue(d.LocalConfig()["volatile.last_state.ready"]) {
 			return api.Ready
 		}
 
 		return api.Running
-	} else if status == "paused" || status == "postmigrate" {
+	case "inmigrate", "postmigrate", "finish-migrate", "save-vm", "suspended", "paused":
 		return api.Frozen
-	} else if status == "internal-error" || status == "io-error" {
+	default:
 		return api.Error
 	}
-
-	return api.Stopped
 }
 
 // State returns the instance's state code.
