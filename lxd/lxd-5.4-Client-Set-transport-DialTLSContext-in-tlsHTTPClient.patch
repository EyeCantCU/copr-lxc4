From 13f765dd41dbff8acf2c078b650f4fd265f4c7cd Mon Sep 17 00:00:00 2001
From: Thomas Parrott <thomas.parrott@canonical.com>
Date: Wed, 3 Aug 2022 14:52:28 +0100
Subject: [PATCH] client/util: Set transport.DialTLSContext in tlsHTTPClient

Fixes regression caused by 9cda9c2135601e223a462f2fbd8a4e0f8dc0e017

Fixes #10734

Signed-off-by: Thomas Parrott <thomas.parrott@canonical.com>
---
 client/util.go | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

diff --git a/client/util.go b/client/util.go
index 14ba1e2817d8..f7c89f3b1a85 100644
--- a/client/util.go
+++ b/client/util.go
@@ -23,7 +23,6 @@ func tlsHTTPClient(client *http.Client, tlsClientCert string, tlsClientKey strin
 	// Define the http transport
 	transport := &http.Transport{
 		TLSClientConfig:       tlsConfig,
-		DialContext:           shared.RFC3493Dialer,
 		Proxy:                 shared.ProxyFromEnvironment,
 		DisableKeepAlives:     true,
 		ExpectContinueTimeout: time.Second * 30,
@@ -37,12 +36,9 @@ func tlsHTTPClient(client *http.Client, tlsClientCert string, tlsClientKey strin
 	}
 
 	// Special TLS handling
-	//lint:ignore SA1019 DialContext doesn't exist in Go 1.13
-	transport.DialTLS = func(network string, addr string) (net.Conn, error) {
+	transport.DialTLSContext = func(ctx context.Context, network string, addr string) (net.Conn, error) {
 		tlsDial := func(network string, addr string, config *tls.Config, resetName bool) (net.Conn, error) {
-			// TCP connection
-			//lint:ignore SA1019 DialContext doesn't exist in Go 1.13
-			conn, err := transport.DialContext(context.Background(), network, addr)
+			conn, err := shared.RFC3493Dialer(ctx, network, addr)
 			if err != nil {
 				return nil, err
 			}
